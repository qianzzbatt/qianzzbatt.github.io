<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[数据结构--绪论]]></title>
    <url>%2F2018%2F12%2F18%2Fsjjg1.1%2F</url>
    <content type="text"><![CDATA[1.1数据结构在程序设计中的作用 用计算机求解任何问题都离不开程序设计，但是计算机不能分析问题并产生问题的解决方案，必须由人分析问题确定问题的解决方案，采用计算机能够理解的指令描述这个问题的求解步骤，然后让计算机执行程序最终获得问题的解。程序设计的一般过程：由问题到想法需要分析问题，抽象出具体的数据模型（待处理的数据以及数据之间的关系，即数据结构），形成问题求解的基本思路：由想法到算法需要完成数据表示（将数据以及数据之间的关系存储到计算机内存中）和数据处理（具体的操作步骤，可以将问题求解的基本思路形成算法）；由算法到程序需要将算法的操作步骤转换成为某种程序设计语言对应的语句，换言之，就是用某种程序设计语言描述数据处理的过程。这一系列所作的文章总结基于（数据结构(c++版)第二版 王红梅等编著），主要内容如下： 1234数据的逻辑结构：线性表，树，图等数据结构，其核心是如何组织待处理的数据以及数据之间的关系。数据的存储结构：如何将线性表，树，图等数据结构存储到计算机的存储器中，其核心是如何有效地存储数据以及数据之间的逻辑关系。算法：如何基于数据的某种存储结构实现插入，删除，查找等基本操作，其核心是如何有效地处理数据。常用数据处理技术：包括查找技术，排序技术，索引技术等。 1.2数据结构的基本概念1.2.1数据结构数据是信息的载体，在计算机科学中是指所有能输入到计算机中并能被计算机程序识别和处理的符号集合。可以将数据分为两大类：一类是整数，实数等数值数据；另一类是文字，声音，图形和图像等非数值数据。 数据元素是数据的基本单位，在计算机程序中通常作为一个整体进行考虑和处理。构成数据元素不可分割的最小单位称为数据项。 数据结构是指互相之间存在一定关系的数据元素的集合。需要强调的是，数据元素是讨论数据结构时涉及的最小数据单位。数据结构分为逻辑结构和存储结构。 数据的逻辑结构是指数据元素之间逻辑关系的整体，可以分为以下四类：1234集合：元素之间就是“属于同一个集合”，除此之外，没有任何关系。线性结构：数据元素之间存在着一对一的线性关系。树结构：数据元素之间存在着一对多的层次关系。图结构：数据元素之间存在着多对多的任意关系。 数据的存储结构又称为物理结构，是数据及其逻辑结构在计算机中的表示，换言之。存储结构除了存储数据元素之外，必须隐式或显式地存储数据元素之间的逻辑关系。通常由两种存储结构：顺序存储结构和链接存储结构。12顺序存储结构的基本思想是:用一组连续的存储单元依次存储数据元素，数据元素之间的逻辑关系由元素的存储位置来表示。链接存储结构的基本思想是：用一组任意的存储单元存储数据元素，数据元素之间的逻辑关系由元素的存储位置来表示。 1.2.2抽象数据类型数据类型是一组值的集合以及定义于这个值集上的一组操作的总称。数据类型规定了该类型数据的取值范围和对这些数据所能采取的操作。 所谓抽象，就是抽出问题本质的特征而忽略非本质的细节，是对具体事物的一个概括。 抽象数据类型（abstract data type,简称ADT）是一个数据结构以及定义在该结构上的一组操作的总称。ADT可以理解为对数据类型的进一步抽象，数据类型和ADT的区别仅在于：数据类型指的是高级程序设计语言支持的基本数据类型，而ADT指的是自己定义的数据类型。ADT提供了定义（使用）、设计和实现三种不同的视图，实现了数据的封装和信息的隐藏。 1.3算法及算法分析1.3.1算法及其描述方法 算法的概念：算法（algorithm）是对特定问题求解的一种描述，是指令的有限序列。 算法的五大特征 12345输入：一个算法有零个或多个输入。输出：一个算法有一个或多个输出。有穷性：一个算法必须总是在执行有穷步之后结束，且每一步都在有穷时间内完成。确定性：算法中的每一条指令必须有确切的含义，对于相同的输入只能得到相同的输出。可行性：算法描述的操作可以通过已经实现的基本操作执行有限次来实现。 一个“好”的算法至少应该满足以下几个条件 12345正确性—正确的的数据能够得到正确的结果；容错性—能够处理异常数据或操作；可读性—通俗易懂，便于阅读和交流；分级性—抽象，分级，便于设计和维护；高效性—使用较少的辅助空间，较短的时间完成。 1.3.2时间复杂度与空间复杂度日后单独写一章关于时间复杂度与空间复杂度的计算 小结]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前言]]></title>
    <url>%2F2018%2F12%2F15%2Fbegin%2F</url>
    <content type="text"><![CDATA[此博客网站主要记录我目前的学习状态。]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>前言</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F12%2F14%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>开始</tag>
      </tags>
  </entry>
</search>
